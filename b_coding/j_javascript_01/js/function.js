// function.js

// function(){ }

/*
var Fn = function(rel){
  console.log((rel/10)+rel);
}
Fn(4000);
Fn(9200);
*/

/*
 * 기명함수 : 함수의 이름이 존재하는 함수
 * 익명함수 : 이름이 존재하지 않는 함수
 * 
 * 기명함수(함수 선언식) -> function FnName(){}
 * 익명함수 -> function(){}
 *  익명함수는 추가로 형태를 가진다 : 함수표현식, 즉시실행함수
 * ----------------------------------------------------------
 * 함수 표현식 : 변수명에 함수르 담는 기능 -> var MyFn = function(){}
 * 즉시 실행함수 : 익명함수를 재호출하지 않고, 생성하자 마자 바로 실행하도록 처리
 *                (function(){})();
 * 값을 반환 또는 돌려주는 기능을 return 이라고 하며,
 * return 이후에는 아무런 동작을 하지 않는다.
*/

// ---------------------------------------------------
console.log(Fn1(8000)); 
// hoist 현상 : 함수를 뒤에 선언해도 제일 앞에 위치하게 됨
// 기명함수(함수선언식)
function Fn1(n){
  return n*10;
}
console.log(Fn1(10));
var rel1 = Fn1(5);
console.log(rel1);

// ---------------------------------------------------
// 표현식의 형태는 함수 이전에 호출시 동작하지 않는다.
// console.log('--',F2(5));
var Fn2 = function(n){
  return n/2;
}

var rel2 = Fn2(50);
console.log(rel2);

// 즉시 실행함수 --------------------------------------
(function(n){
  var rel3 = n;      //인자
  console.log(rel3);
})(50);              //인수

console.log((function(n){
  var rel4 = n;
  return rel4;
})(1000));
//-----------------------------------------------------